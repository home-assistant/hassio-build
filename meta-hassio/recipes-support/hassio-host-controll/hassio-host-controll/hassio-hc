#!/bin/bash
set -e

# shellcheck disable=SC1091
source /usr/sbin/resin-vars

# shellcheck disable=SC1091
source /etc/resin-supervisor/supervisor.conf

VERSION=@RESINOS_HASSIO_VERSION@

#
# MAIN
#
while read -r cmd
do
    IFS=" " read -r -a parse <<< "$cmd"

    if [ "${parse[0]}" == "info" ]; then
        HOSTNAME=$(hostname)
        OS=$(uname -o)
        LAST=$(curl -s "$ENDPOINT" | jq -e -r '.resinos')
        FEATURES="[\"shutdown\", \"reboot\", \"update\", \"hostname\"]"

        echo "{ \"type\": \"resinos\", \"version\": \"$VERSION\", \"last_version\": \"$LAST\", \"hostname\": \"$HOSTNAME\", \"features\": $FEATURES, \"os\": \"$OS\" }"
        continue
    fi
    if [ "${parse[0]}" == "reboot" ]; then
        systemctl reboot && echo "OK" || echo "ERROR"
        continue
    fi
    if [ "${parse[0]}" == "shutdown" ]; then
        systemctl poweroff && echo "OK" || echo "ERROR"
        continue
    fi
    if [ "${parse[0]}" == "update" ]; then
        if [ ! -z "${parse[1]}" ]; then
            nohup resinhup --hostos-version "${parse[1]}" > /dev/null 2>&1 &
        else
            nohup resinhup > /dev/null 2>&1 &
        fi

        sleep 4 && echo "OK"
        continue
    fi
    if [ "${parse[0]}" == "hostname" ]; then
        NEW_HOSTNAME="${parse[1]}"

        if [ -z "$NEW_HOSTNAME" ]; then
            echo "ERROR" && continue
        fi

        hostname "$NEW_HOSTNAME" || echo "ERROR" && continue

        # shellcheck disable=SC2005
        echo "$(jq ".hostname=\"$NEW_HOSTNAME\"" < "$CONFIG_PATH")" > "$CONFIG_PATH"
        echo "$NEW_HOSTNAME" > /etc/hostname

        echo "OK" && continue
    fi

    echo "WRONG"
done
